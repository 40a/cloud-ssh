{"name":"Cloud-ssh","tagline":"Wrapper for ssh which enchance work with cloud providers","body":"cloud-ssh\r\n=========\r\n\r\nWrapper for ssh which enchance work with cloud providers.\r\n\r\nIn times of digital clouds, servers come and go, and you barely remember its names and addresses. This tiny tool provide fuzzy search (yeah like SublimeText) for your instances list, based on tags, security groups and names. \r\n\r\nCheck releases for latest version: https://github.com/buger/cloud-ssh/releases\r\n\r\nHere is few examples:\r\n\r\n```\r\nsh-3.2$ # Lets say i want connect to server called stage-matching\r\nsh-3.2$ ./cloud-ssh leon@stama\r\nFound config: /Users/buger/.ssh/cloud-ssh.yaml\r\nFound clound instance:\r\nCloud: granify_ec2      Matched by: aws:autoscaling:groupName=stage-matching    Addr: ec2-50-200-40-200.compute-1.amazonaws.com\r\n\r\nWelcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-25-virtual x86_64)\r\n```\r\n\r\nIf there are more then 1 server matching your query, it will ask you to choose one:\r\n```\r\nsh-3.2$ # I want to check one of my CouchBase servers\r\nsh-3.2$ ./cloud-ssh ubuntu@couch\r\nFound config: /Users/buger/.ssh/cloud-ssh.yaml\r\nFound multiple instances:\r\n1)  Cloud: granify_ec2  Matched by: Name=couchbase-02   Addr: ec2-50-200-40-201.compute-1.amazonaws.com\r\n2)  Cloud: granify_ec2  Matched by: Name=couchbase-03   Addr: ec2-50-200-40-202.compute-1.amazonaws.com\r\n3)  Cloud: granify_ec2  Matched by: Name=couchbase-04   Addr: ec2-50-200-40-203.compute-1.amazonaws.com\r\n4)  Cloud: granify_ec2  Matched by: Name=couchbase-01   Addr: ec2-50-200-40-204.compute-1.amazonaws.com\r\n5)  Cloud: granify_ec2  Matched by: Name=couchbase-05   Addr: ec2-50-200-40-205.compute-1.amazonaws.com\r\nChoose instance: 1\r\nWelcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.2.0-58-virtual x86_64)\r\n```\r\n\r\nNice, right? More over, cloud-ssh can act as full ssh replacement, since it just forward all calls to ssh command. \r\n\r\n## Configuration \r\n\r\nBy default it checks your environment for AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables. If you want advanced configuration you can create `cloud-ssh.yaml` in one of this directories: ./ (current), ~/.ssh/, /etc/\r\n\r\nNote that you can define multiple clouds, per provider, if you have multi-datacenter setup or just different clients. Cloud name will be included into search term, so you can filter by it too!\r\n\r\nRight now only 2 data cloud providers supported: Amazon EC2 and DigitalOcean. \r\n\r\nExample configuration:\r\n```\r\ngran_ec2: # cloud name, used when searching\r\n    provider: aws \r\n    region: us-east-1\r\n    access_key: AAAAAAAAAAAAAAAAA\r\n    secret_key: BBBBBBBBBBBBBBBBBBBBBBBBB\r\n    default_user: ubuntu\r\ngran_digital:\r\n    provider: digital_ocean\r\n    client_id: 111111111111111111\r\n    api_key: 22222222222222222\r\n```\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (git checkout -b my-new-feature)\r\n3. Commit your changes (git commit -am 'Added some feature')\r\n4. Push to the branch (git push origin my-new-feature)\r\n5. Create new Pull Request","google":"UA-41426242-2","note":"Don't delete this file! It's used internally to help with page regeneration."}